image: golang:latest

stages:
  - test
  - build
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - go mod download
    - go build -o whatsapbot .
  artifacts:
    paths:
      - whatsapbot

deploy:
  stage: deploy
  script:
    - eval $(ssh-agent -s)  # Mulai ssh-agent
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa <<< "$SSH_PASSPHRASE"
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
    - ssh -i ~/.ssh/id_rsa $DEPLOY_USER@$DEPLOY_SERVER "systemctl stop bot-whatsapp"
    - ssh -i ~/.ssh/id_rsa $DEPLOY_USER@$DEPLOY_SERVER "rm -f /home/peratan/bot-whatsapp/whatsapbot"
    - scp -i ~/.ssh/id_rsa whatsapbot $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH
    - ssh -i ~/.ssh/id_rsa $DEPLOY_USER@$DEPLOY_SERVER "systemctl start bot-whatsapp"
  environment: production

# deploy di stin
deploy_in_stin:
  stage: build
  tags:
    - STIN-Bot-Chats
  script:
    - go mod download
    - go build -o wabot .
    - sudo systemctl stop wa-service.service
    - rm -rf /app/whatsapp/wabot
    - cp wabot /app/whatsapp/wabot
    - sudo systemctl start wa-service.service
  environment: production